creaDfParaRf(df=datos,k=10)
View(tabla)
View(tabla)
View(datos)
tabla<-as.data.frame(matrix(ncol=3,nrow=1))
View(tabla)
View(tabla)
names(tabla)<- names(datos)
names(tabla)
head(datos)
names(tabla)<- names(datos)
tabla$claveModelo<-"28270"
tabla$FECHA_INAR<-"2018-06-01"
tabla$sumaValorGA <- NA
View(tabla)
datos <- rbind(datos,tabla)
View(datos)
creaDfParaRf(df=datos,k=10)
aux <-creaDfParaRf(df=datos,k=10)
View(aux)
View(tabla)
View(datos)
datos
View(tabla)
View(datos)
datos <- read.table("varsRetrasadas.csv",sep="|",header=TRUE)
tabla<-as.data.frame(matrix(ncol=3,nrow=1))
names(tabla)<- names(datos)
tabla$claveModelo<-"28270"
tabla$FECHA_INAR<-"2018-06-01"
tabla$sumaValorGA <- NA
View(datos)
datos <- rbind(datos,tabla)
View(datos)
155773-154665
library(rgdal)
setwd("~/Documents/Arena/2018_07_infoExterna/2018_10_capasInegi/889463142683_s/conjunto_de_datos")
entidad <- readOGR(dsn=".",layer ="areas_geoestadisticas_estatales" )
municipio <- readOGR(".","areas_geoestadisticas_municipales")
ageb <-readOGR(dsn=".",layer="areas_geoestadisticas_basicas_rurales")
#### Obtengo información general del archivo shape
ogrInfo(".","areas_geoestadisticas_estatales")
str(entidad,max.level = 3)
#### No tengo claro qué estoy obteniendo :(
#### es el número de polígonos independientes por estado (islas y parte continental)
sapply(entidad@polygons,function(x)length(x@Polygons))
entidad@data
#### Cambio el CRS
## Library rgdal (spTransform)
entidad <- spTransform(entidad,CRS="+proj=longlat + datum=WGS84")
summary(entidad)
municipio <- spTransform(municipio,CRS="+proj=longlat + datum=WGS84")
summary(munMod)
summary(municipio)
ageb <- spTransform(ageb,CRS="+proj=longlat + datum=WGS84")
#### Obtengo el tamaño de cada archivo
####
object.size(entidad)
#### Reviso que se haya cambiado el CRS
proj4string(entidad)
proj4string(municipio)
entidad@data
#### Con la función gSimplify reduzco el número de vértices
#### mientras más alto es el nivel de tolerancia, el numero de vertices disminuye
library(rgeos)
object.size(entidadSimple)
# simplificación de polígonos -----------
entidadSimple <- gSimplify(entidad,tol = 0.005)
entidadSimple <- SpatialPolygonsDataFrame(entidadSimple,
data = entidad@data)
plot(entidadSimple)
??fortify
object.size(entidadSimple)
object.size(entidad)
object.size(entidadSimple)/object.size(entidad)
(object.size(entidadSimple)/object.size(entidad))[1]
plot(entidadSimple)
# puntos
hospitales <- read.csv('datosServSaludYAsistenciaSocialDenue.csv',sep='|')
object.size(hospitales)
hospitales <- hospitales[,names(hospitales)%in%c("nom_estab","latitud","longitud")]
lapply(hospitales,sum(is.na()))
lapply(hospitales,sum(is.na))
summary(hospitales)
sum(is.na(hospitales$nom_estab))
sum(is.na(hospitales$latitud))
sum(is.na(hospitales$longitud))
hospitalesMini <- hospitales %>%
filter(!is.na(longitud)) %>%
filter(!is.na(latitud))
# prueba de los mapas ------------------
library(dplyr)
hospitalesMini <- hospitales %>%
filter(!is.na(longitud)) %>%
filter(!is.na(latitud))
sum(is.na(hospitalesMini$nom_estab))
sum(is.na(hospitalesMini$longitud))
sum(is.na(hospitalesMini$latitud))
hospitalesMini <- hospitales %>%
filter(!is.na(longitud)) %>%
filter(!is.na(latitud)) %>%
mutate(
lat = as.numeric(as.character(latitud)),
lng = as.numeric(as.character(longitud))
)
hospitalesMini <- hospitales %>%
filter(!is.na(longitud)) %>%
filter(!is.na(latitud)) %>%
mutate(
lat = as.numeric(as.character(latitud)),
lng = as.numeric(as.character(longitud))
) %>%
filter(!is.na(lat))
View(hospitalesMini)
coordenadas <- hospitalesMini %>%
select(lat,lng)
hospitalesPuntos <- SpatialPointsDataFrame(coords = coordenadas,data = hospitalesMini)
?setView()
??setView()
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,lng =~lng, lat=~lat,popup = ~as.character(nom_estab),clusterOptions = markerClusterOptions())
library(leaflet)
# poligonos
mapaEntidad <- readRDS('entidad.RDS')
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,lng =~lng, lat=~lat,popup = ~as.character(nom_estab),clusterOptions = markerClusterOptions())
hospitalesPuntos@data
head(hospitalesPuntos@data)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,lng =~lng, lat=~lat,
popup = ~as.character(nom_estab),
clusterOptions = markerClusterOptions())
data("quakes")
head(quakes)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
popup = ~as.character(nom_estab),
label = ~as.character(nom_estab)
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
popup = ~as.character(nom_estab),
label = ~as.character(nom_estab),
clusterOptions = markerClusterOptions())
shiny::runApp('~/GitHub/mapas/appMapas')
head(hospitalesPuntos)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
popup = ~as.character(nom_estab),
label = ~as.character(nom_estab),
clusterOptions = markerClusterOptions())
# Pruebas ----
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
"Latitud",hospitalesPuntos$lat,"<br>",
"Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
#label = ~as.character(nom_estab), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Pruebas Dos ----
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
"Latitud",hospitalesPuntos$lat,"<br>",
"Longitud",hospitalesPuntos$lng), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Pruebas Dos ----
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = paste("Nombre",hospitalesPuntos$nom_estab,
"Latitud",hospitalesPuntos$lat,
"Longitud",hospitalesPuntos$lng), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Pruebas Dos ----
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = html=paste("<div>",
"<h3>",
"Nombre",hospitalesPuntos$nom_estab,
"</h3>",
"Latitud",hospitalesPuntos$lat,
"<br>",
"Longitud",hospitalesPuntos$lng,
"<div>"
), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Pruebas Dos ----
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = paste("Nombre",hospitalesPuntos$nom_estab,'\n',
"Latitud",hospitalesPuntos$lat, '\n',
"Longitud",hospitalesPuntos$lng, '\n'
), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
library(htmltools)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = paste("Nombre",hospitalesPuntos$nom_estab,'<br>',
"Latitud",hospitalesPuntos$lat, '<br>',
"Longitud",hospitalesPuntos$lng, '<br>'
), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = HTML(paste('<p>',hospitalesPuntos$nom_estab,'<p></p>',
hospitalesPuntos$lat, '<p></p>',
hospitalesPuntos$lng, '</p>'
)), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
names(hospitalesPuntos)
etiquetas <- lapply(seq(nrow(hospitalesPuntos)), function(i) {
paste0( '<p>', hospitalesPuntos[i, "nom_estab"], '<p></p>',
hospitalesPuntos[i, "latitud"], ', ',
hospitalesPuntos[i, "longitud"],'</p><p>'
)
}
)
str(hospitalesPuntos)
copia <- hospitalesPuntos
copia@data$hoverText<- lapply(seq(nrow(hospitalesPuntos)), function(i) {
paste0( '<p>', hospitalesPuntos[i, "nom_estab"], '<p></p>',
hospitalesPuntos[i, "latitud"], ', ',
hospitalesPuntos[i, "longitud"],'</p><p>'
)
}
)
copia@data$hoverText<- lapply(seq(nrow(copia@data)), function(i) {
paste0( '<p>', copia@data[i, "nom_estab"], '<p></p>',
copia@data[i, "latitud"], ', ',
copia@data[i, "longitud"],'</p><p>'
)
}
)
head(copia@data)
copia <- hospitalesPuntos
etiquetas<- lapply(seq(nrow(copia@data)), function(i) {
paste0( '<p>', copia@data[i, "nom_estab"], '<p></p>',
copia@data[i, "latitud"], ', ',
copia@data[i, "longitud"],'</p><p>'
)
}
)
head(etiquetas)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el mouse para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
head(etiquetas)
etiquetas<- lapply(seq(nrow(copia@data)), function(i) {
paste0( '<p>', copia@data[i, "nom_estab"], '</p>',
'<p>',copia@data[i, "latitud"], '</p>',
'<p>',copia@data[i, "longitud"],'</p>'
)
}
)
head(etiquetas)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Construyo una variable con las etiquetas,
etiquetas<- lapply(seq(nrow(copia@data)), function(i) {
paste0( '<p>',"Nombre", copia@data[i, "nom_estab"], '</p>',
'<p>',"latitud",copia@data[i, "latitud"], '</p>',
'<p>',"longitud",copia@data[i, "longitud"],'</p>'
)
}
)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud",hospitalesPuntos$lat,"<br>",
#             "Longitud",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
# Construyo una variable con las etiquetas,
etiquetas<- lapply(seq(nrow(copia@data)), function(i) {
paste0( '<p>',"Nombre: ", copia@data[i, "nom_estab"], '</p>',
'<p>',"latitud: ",copia@data[i, "latitud"], '</p>',
'<p>',"longitud: ",copia@data[i, "longitud"],'</p>'
)
}
)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = mapply(
function(x,y){
HTML(sprintf("<emp>%s:</emp> %s",htmlEscape(x),htmlEscape(y)))
},hospitalesPuntos$lat,hospitalesPuntos$lng,SIMPLIFY = FALSE),
# basta con pasar el cursor para que aparezca la etiqueta
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = mapply(
function(x,y){
HTML(sprintf("<emp>%s:</emp> %s",htmlEscape(x),htmlEscape(y)))
},hospitalesPuntos$lat,hospitalesPuntos$lng,SIMPLIFY = FALSE),
# basta con pasar el cursor para que aparezca la etiqueta
labelOptions = lapply(1:nrow(hospitalesPuntos),function(x){
labelOptions(direction = "auto")
}),
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 5) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la informacion
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 3) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la informacion
clusterOptions = markerClusterOptions())
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la informacion
clusterOptions = markerClusterOptions())
library(rgdal)  #para leer archivos "shp"
getwd()
hospitalesMini <- hospitales %>%
filter(!is.na(longitud)) %>%
filter(!is.na(latitud)) %>%
mutate(
lat = as.numeric(as.character(latitud)),
lng = as.numeric(as.character(longitud))
) %>%
filter(!is.na(lat)) %>%
sample_n(500)
coordenadas <- hospitalesMini %>%
select(lat,lng)
hospitalesPuntos <- SpatialPointsDataFrame(coords = coordenadas,
data = hospitalesMini)
# Construyo una variable con las etiquetas,
# Elijo labels en lugar del popup porque con las etiquetas no es necesario
# dar clik en el marcador para que aparezca la informacion
etiquetas<- lapply(seq(nrow(hospitalesPuntos@data)), function(i) {
paste0( '<p>',"Nombre: ", hospitalesPuntos@data[i, "nom_estab"], '</p>',
'<p>',"latitud: ",hospitalesPuntos@data[i, "latitud"], '</p>',
'<p>',"longitud: ",hospitalesPuntos@data[i, "longitud"],'</p>'
)
}
)
leaflet(mapaEntidad) %>%
addTiles() %>%
setView(lng = -102.53, lat = 23.62, zoom = 4) %>%
addPolygons(weight = 1) %>%
addMarkers(data  = hospitalesPuntos,
lng =~lng, lat=~lat,
#popup = paste("Nombre: ",hospitalesPuntos$nom_estab,"<br>",
#             "Latitud: ",hospitalesPuntos$lat,"<br>",
#             "Longitud: ",hospitalesPuntos$lng),  # popup funciona al hacer clic sobre el marcador
label = lapply(etiquetas,HTML), # basta con pasar el cursor para que aparezca la informacion
clusterOptions = markerClusterOptions())
runApp('~/GitHub/mapas/appMapas')
setwd("~/Documents/Arena/2018_07_infoExterna/2018_10_capasInegi")
entidad <- readOGR(dsn="./conjunto_de_datos",layer ="areas_geoestadisticas_estatales" )
getwd()
setwd("~/Documents/Arena/2018_07_infoExterna/2018_10_capasInegi/889463142683_s")
entidad <- readOGR(dsn="./conjunto_de_datos",layer ="areas_geoestadisticas_estatales" )
#### Obtengo información general del archivo shape
ogrInfo("./conjunto_de_datos","areas_geoestadisticas_estatales")
saveRDS(municipioSimple,"./conjunto_de_datos/municipioDos.RDS")
municipioSimple <- gSimplify(municipio,tol = 0.005)
# simplificación de polígonos -----------
entidadSimple <- gSimplify(entidad,tol = 0.005)
# incluyo los datos
entidadSimple <- SpatialPolygonsDataFrame(entidadSimple,
data = entidad@data)
saveRDS(entidadSimple,"./conjunto_de_datos/entidadDos.RDS")
str(entidad,max.level = 3)
getwd
getwd()
setwd("~/GitHub/mapas/appMapas")
